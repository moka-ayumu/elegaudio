{"version":3,"sources":["lib/Elegaudio.tsx","components/Range.tsx","components/Radio.tsx","components/Color.tsx","App.tsx","index.tsx"],"names":["Elegauido","src","width","height","barGap","barWidth","color","playColor","hoverColor","origin","side","audioRef","canvasElement","useRef","progressElement","hoverElement","audio","Audio","region","Path2D","useState","onLoaded","setOnLoaded","setIsPlaying","drawProgress","useCallback","canvas","per","style","ctx","getContext","fillStyle","fillRect","useEffect","undefined","current","addEventListener","currentTime","duration","clearCanvas","initArrayBuffer","_buffer","buffer","slice","canvasRef","canvasCtx","progressCanvas","progressCanvasCtx","hoverCanvas","hoverCanvasCtx","canBarCount","clearCanvasComp","blob","Blob","type","url","URL","createObjectURL","AudioContext","decodeAudioData","then","audioBuffer","channelData","getChannelData","res","perRate","Math","ceil","length","i","nowData","push","reduce","a","b","abs","max","n","wei","rect","clip","error","init","startsWith","document","baseURI","href","fetch","r","arrayBuffer","ArrayBuffer","ref","Error","e","clearRect","className","margin","onMouseUp","target","getBoundingClientRect","pos","clientX","x","clientY","y","onMouseMove","onMouseLeave","Range","set","htmlFor","name","min","defaultValue","Number","value","Radio","id","random","toString","substring","onChange","map","v","defaultChecked","toUpperCase","App","inputFile","setInputFile","played","setPlayed","alt","rel","accept","files","item","Color","language","tomorrow","showLineNumbers","wrapLines","lineProps","textDecoration","onClick","pause","play","viewBox","fill","rx","ry","d","marginTop","marginLeft","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.56c47565.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"./Elegaudio.css\";\n\nfunction Elegauido({\n  src,\n  width,\n  height,\n  barGap = 1,\n  barWidth = 3,\n  color = \"#FFF587\",\n  playColor = \"#FF665A\",\n  hoverColor = \"#FF8C64\",\n  origin = \"bottom\",\n  side = \"side\",\n  audioRef,\n}: {\n  src: string | ArrayBuffer;\n  width: number;\n  height: number;\n  barGap?: number;\n  barWidth?: number;\n  color?: string | CanvasGradient | CanvasPattern;\n  playColor?: string | CanvasGradient | CanvasPattern;\n  hoverColor?: string | CanvasGradient | CanvasPattern;\n  origin?: \"bottom\" | \"top\" | \"left\" | \"right\";\n  side?: \"side\" | \"center\";\n  audioRef?: React.MutableRefObject<any>;\n}) {\n  const canvasElement = useRef<HTMLCanvasElement>(null);\n  const progressElement = useRef<HTMLCanvasElement>(null);\n  const hoverElement = useRef<HTMLCanvasElement>(null);\n  const audio = useRef(new Audio());\n  const region = useRef(new Path2D());\n  const [onLoaded, setOnLoaded] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const drawProgress = useCallback(\n    (\n      canvas: HTMLCanvasElement,\n      per: number,\n      style: string | CanvasGradient | CanvasPattern\n    ) => {\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx !== null) {\n        ctx.fillStyle = style;\n        switch (origin) {\n          case \"top\":\n          case \"bottom\":\n            ctx.fillRect(0, 0, width * per, height);\n            break;\n          case \"left\":\n          case \"right\":\n            ctx.fillRect(0, 0, width, height * per);\n            break;\n\n          default:\n            break;\n        }\n      }\n    },\n    [origin, width, height]\n  );\n\n  useEffect(() => {\n    if (audioRef !== undefined) {\n      if (audio.current instanceof Audio) {\n        audio.current = audioRef.current;\n      } else {\n        audioRef.current = audio.current;\n      }\n    }\n  }, [audioRef]);\n\n  useEffect(() => {\n    audio.current.addEventListener(\"timeupdate\", () => {\n      if (progressElement.current !== null) {\n        const per = audio.current.currentTime / audio.current.duration;\n        clearCanvas(progressElement.current);\n        drawProgress(progressElement.current, per, playColor);\n        if (per >= 1) {\n          setIsPlaying(false);\n        }\n      }\n    });\n  }, [drawProgress, playColor]);\n\n  const initArrayBuffer = useCallback(\n    (_buffer: ArrayBuffer) => {\n      try {\n        const buffer = _buffer.slice(0);\n        const [canvas, canvasCtx] = canvasRef(canvasElement);\n        const [progressCanvas, progressCanvasCtx] = canvasRef(progressElement);\n        const [hoverCanvas, hoverCanvasCtx] = canvasRef(hoverElement);\n        const canBarCount =\n          origin === \"bottom\" || origin === \"top\"\n            ? width / (barWidth + barGap)\n            : height / (barWidth + barGap);\n        clearCanvasComp(canvas, progressCanvas, hoverCanvas);\n        const blob = new Blob([buffer], { type: \"audio/wav\" });\n        const url = URL.createObjectURL(blob);\n        audio.current.src = url;\n        const ctx = new AudioContext();\n        ctx.decodeAudioData(buffer).then((audioBuffer) => {\n          const channelData = audioBuffer.getChannelData(0);\n          let res: number[] = [];\n          const perRate = Math.ceil(audioBuffer.length / canBarCount);\n          for (let i = 0; i < audioBuffer.length; i += perRate) {\n            const nowData = channelData.slice(i, i + perRate - 1);\n            res.push(\n              nowData.reduce((a, b) => Math.abs(a) + Math.abs(b)) /\n                nowData.length\n            );\n          }\n          const max = Math.max(...res);\n          region.current = new Path2D();\n          for (let i = 0, n = res.length; i < n; i++) {\n            const e = res[i];\n            const wei = e / max;\n            switch (origin) {\n              case \"bottom\":\n                region.current.rect(\n                  (barWidth + barGap) * i,\n                  side === \"side\"\n                    ? height * (1 - wei)\n                    : (height * (1 - wei)) / 2,\n                  barWidth,\n                  height * wei\n                );\n                break;\n\n              case \"top\":\n                region.current.rect(\n                  (barWidth + barGap) * i,\n                  side === \"side\" ? 0 : (height * (1 - wei)) / 2,\n                  barWidth,\n                  height * wei\n                );\n                break;\n\n              case \"left\":\n                region.current.rect(\n                  side === \"side\" ? 0 : (width * (1 - wei)) / 2,\n                  (barWidth + barGap) * i,\n                  width * wei,\n                  barWidth\n                );\n                break;\n\n              case \"right\":\n                region.current.rect(\n                  side === \"side\" ? width * (1 - wei) : (width * (1 - wei)) / 2,\n                  (barWidth + barGap) * i,\n                  width * wei,\n                  barWidth\n                );\n                break;\n\n              default:\n                break;\n            }\n          }\n          hoverCanvasCtx.clip(region.current, \"evenodd\");\n          progressCanvasCtx.clip(region.current, \"evenodd\");\n          canvasCtx.clip(region.current, \"evenodd\");\n          // resetCtxs(canvas, progressCanvas, hoverCanvas);\n          drawProgress(canvas, 1, color);\n          setOnLoaded(true);\n        });\n      } catch (error) {}\n    },\n    [barGap, barWidth, origin, drawProgress, side, color, width, height]\n  );\n\n  const init = useCallback(\n    (url: string) => {\n      if (url.startsWith(\"./\")) {\n        url = new URL(url, document.baseURI).href;\n      }\n      fetch(url)\n        .then((r) => r.arrayBuffer())\n        .then((buffer) => {\n          initArrayBuffer(buffer);\n        });\n    },\n    [initArrayBuffer]\n  );\n\n  useEffect(() => {\n    setOnLoaded(false);\n    setIsPlaying(false);\n    audio.current.currentTime = 0;\n    switch (typeof src) {\n      case \"string\":\n        init(src);\n        break;\n\n      case \"object\":\n        if (src instanceof ArrayBuffer) {\n          initArrayBuffer(src);\n        }\n        break;\n\n      default:\n        break;\n    }\n  }, [init, initArrayBuffer, src]);\n\n  const onMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const rect = (e.target as HTMLElement).getBoundingClientRect();\n    let pos =\n      origin === \"bottom\" || origin === \"top\"\n        ? e.clientX - rect.x\n        : e.clientY - rect.y;\n    pos = pos < 0 ? 0 : pos;\n    if (hoverElement.current !== null) {\n      const canvas = hoverElement.current;\n      const per =\n        origin === \"bottom\" || origin === \"top\" ? pos / width : pos / height;\n      clearCanvas(canvas);\n      drawProgress(canvas, per, hoverColor);\n    }\n  };\n\n  const onMouseLeave = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (hoverElement.current !== null) {\n      clearCanvas(hoverElement.current);\n    }\n  };\n\n  const onMouseUp = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const rect = (e.target as HTMLElement).getBoundingClientRect();\n    let pos =\n      origin === \"bottom\" || origin === \"top\"\n        ? e.clientX - rect.x\n        : e.clientY - rect.y;\n    pos = pos < 0 ? 0 : pos;\n    if (progressElement.current !== null && hoverElement.current !== null) {\n      const canvas = hoverElement.current;\n      const per =\n        origin === \"bottom\" || origin === \"top\" ? pos / width : pos / height;\n      audio.current.currentTime = audio.current.duration * per;\n      clearCanvas(progressElement.current);\n      // clearCanvasComp(progressElement.current);\n      // resetCtxs(canvas);\n    }\n  };\n\n  const canvasRef = (\n    ref: React.RefObject<HTMLCanvasElement>\n  ): [HTMLCanvasElement, CanvasRenderingContext2D] => {\n    const canvas = ref.current;\n    if (canvas !== null) {\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx !== null) {\n        return [canvas, ctx];\n      } else throw new Error(\"2dctxnull\");\n    } else throw new Error(\"canvasnull\");\n  };\n\n  const clearCanvas = (...canvas: HTMLCanvasElement[]) => {\n    for (let i = 0, n = canvas.length; i < n; i++) {\n      const e = canvas[i];\n      const ctx = e.getContext(\"2d\");\n      for (let i = 0; i < 10; i++) {\n        ctx?.clearRect(0, 0, e.width, e.height);\n      }\n    }\n  };\n\n  const clearCanvasComp = (...canvas: HTMLCanvasElement[]) => {\n    for (let i = 0, n = canvas.length; i < n; i++) {\n      const e = canvas[i];\n      const width = e.width;\n      e.width = width;\n    }\n  };\n\n  // const resetCtxs = (...canvas: HTMLCanvasElement[]) => {\n  //   for (let i = 0; i < canvas.length; i++) {\n  //     const e = canvas[i];\n  //     const ctx = e.getContext(\"2d\");\n  //     console.log(ctx, region.current);\n  //     ctx?.clip(region.current, \"evenodd\");\n  //   }\n  // };\n\n  return (\n    <div className=\"elegaudio_main\">\n      {onLoaded ? <></> : <div className=\"elegaudio_loading\"></div>}\n      <div className={onLoaded ? \"\" : \"eleagudio_disabled\"}>\n        <div\n          style={{ width, height, margin: \"auto\" }}\n          onMouseUp={onMouseUp}\n          onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave}\n        >\n          <canvas\n            width={width}\n            height={height}\n            className=\"elegaudio_overlayCanvas elegaudio_hoverCanvas\"\n            ref={hoverElement}\n          />\n          <canvas\n            width={width}\n            height={height}\n            className=\"elegaudio_overlayCanvas\"\n            ref={progressElement}\n          />\n          <canvas\n            width={width}\n            height={height}\n            className=\"elegaudio_backgroundCanvas\"\n            ref={canvasElement}\n          ></canvas>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Elegauido;\n","import \"./Input.css\";\n\nfunction Range({\n  i,\n  set,\n}: {\n  /** [name, defaultValue, max] */\n  i: string[];\n  set: [number, React.Dispatch<React.SetStateAction<number>>];\n}) {\n  return (\n    <div className=\"range high\">\n      <label className=\"inputTitle\" htmlFor={i[0]}>\n        {i[0]}\n      </label>\n      <input\n        name={i[0]}\n        type=\"range\"\n        min=\"1\"\n        max={i[2]}\n        defaultValue={i[1]}\n        // onChange={(e) => {\n        //   set[1](Number(e.target.value));\n        // }}\n        onMouseUp={(e) => {\n          set[1](Number((e.target as HTMLInputElement).value));\n        }}\n      />\n      <label htmlFor={i[0]}>{set[0]}</label>\n    </div>\n  );\n}\n\nexport default Range;\n","import \"./Input.css\";\n\nfunction Radio({\n  i,\n  set,\n}: {\n  /** [...value] */\n  i: string[];\n  set: [any, React.Dispatch<React.SetStateAction<any>>];\n}) {\n  const id = (Math.random() + 1).toString(36).substring(7);\n  return (\n    <form\n      className=\"radio high\"\n      onChange={(e) => {\n        set[1]((e.target as HTMLInputElement).value);\n      }}\n    >\n      {i.map((v) => (\n        <div>\n          <input\n            name={id}\n            type=\"radio\"\n            defaultChecked={v === set[0]}\n            id={v}\n            value={v}\n          />\n          <label htmlFor={v}>{v}</label>\n        </div>\n      ))}\n    </form>\n  );\n}\n\nexport default Radio;\n","import \"./Input.css\";\n\nfunction Range({\n  i,\n  set,\n}: {\n  /** name */\n  i: string;\n  set: [string, React.Dispatch<React.SetStateAction<string>>];\n}) {\n  return (\n    <div className=\"color high\">\n      <label className=\"inputTitle\" htmlFor={i}>\n        {i}\n      </label>\n      <input\n        name={i}\n        type=\"color\"\n        value={set[0]}\n        onChange={(e) => {\n          set[1](e.target.value.toUpperCase());\n        }}\n      />\n      <label htmlFor={i}>{set[0]}</label>\n    </div>\n  );\n}\n\nexport default Range;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Prism } from \"react-syntax-highlighter\";\nimport \"./App.css\";\nimport Elegaudio from \"./lib/Elegaudio\";\nimport { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport Range from \"./components/Range\";\nimport Radio from \"./components/Radio\";\nimport Color from \"./components/Color\";\n\nfunction App() {\n  const [inputFile, setInputFile] = useState<ArrayBuffer>();\n  const [played, setPlayed] = useState(false);\n  const ref = useRef(new Audio());\n  const width = useState(1000);\n  const height = useState(80);\n  const barWidth = useState(4);\n  const barGap = useState(5);\n  const origin = useState<\"bottom\" | \"top\" | \"left\" | \"right\">(\"bottom\");\n  const side = useState<\"side\" | \"center\">(\"center\");\n  const color = useState(\"#FFF587\");\n  const playColor = useState(\"#FF665A\");\n  const hoverColor = useState(\"#FF8C64\");\n\n  useEffect(\n    () => setPlayed(false),\n    [inputFile, width[0], height[0], barWidth[0], barGap[0], origin[0]]\n  );\n\n  useEffect(() => {\n    ref.current.addEventListener(\"play\", () => {\n      setPlayed(true);\n    });\n    ref.current.addEventListener(\"pause\", () => {\n      setPlayed(false);\n    });\n  }, []);\n\n  const onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files !== null) {\n      const item = e.target.files.item(0);\n      if (item !== null && item.type.startsWith(\"audio/\")) {\n        item.arrayBuffer().then((buffer) => setInputFile(buffer));\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <img src=\"./logo.png\" className=\"logo\" alt=\"logo\" />\n      <h1 className=\"center\">\n        Elegaudio{\" \"}\n        <a\n          href=\"https://github.com/moka-ayumu/elegaudio\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Github\n        </a>\n      </h1>\n\n      <h2>Audio file for examples</h2>\n      <input type=\"file\" accept=\"audio/*\" onChange={onFileChange} />\n\n      <h2>Playground</h2>\n      <div className=\"center flex\">\n        <Range i={[\"width\", \"1000\", \"1000\"]} set={width} />\n        <Range i={[\"height\", \"80\", \"1000\"]} set={height} />\n        <Range i={[\"barWidth\", \"3\", \"20\"]} set={barWidth} />\n        <Range i={[\"barGap\", \"1\", \"20\"]} set={barGap} />\n        <Color i=\"color\" set={color} />\n        <Color i=\"playColor\" set={playColor} />\n        <Color i=\"hoverColor\" set={hoverColor} />\n        <Radio i={[\"bottom\", \"top\", \"left\", \"right\"]} set={origin} />\n        <Radio i={[\"side\", \"center\"]} set={side} />\n      </div>\n      <Prism language=\"jsx\" style={tomorrow} showLineNumbers={true}>\n        {`<Elegaudio src=\"./sample.mp3\" width={${width[0]}} height={${height[0]}} barWidth={${barWidth[0]}} barGap={${barGap[0]}} origin=\"${origin[0]}\" side=\"${side[0]}\" color=\"${color[0]}\" hoverColor=\"${hoverColor[0]}\" playColor=\"${playColor[0]}\"/>`}\n      </Prism>\n      <Elegaudio\n        src={inputFile === undefined ? \"./sample.mp3\" : inputFile}\n        width={width[0]}\n        height={height[0]}\n        barWidth={barWidth[0]}\n        barGap={barGap[0]}\n        origin={origin[0]}\n        side={side[0]}\n        color={color[0]}\n        hoverColor={hoverColor[0]}\n        playColor={playColor[0]}\n        audioRef={ref}\n      />\n\n      <h2>src</h2>\n      <p>src allowed string as url or ArrayBuffer</p>\n      <p>\n        Don't try ArrayBuffer.slice in direct. Because it creates a new object\n        for each re-render, it throws an unexpected error.\n      </p>\n      <Prism\n        language=\"jsx\"\n        style={tomorrow}\n        showLineNumbers={true}\n        wrapLines={true}\n        lineProps={(i) => {\n          return {\n            style: { textDecoration: i === 1 ? \"line-through\" : \"\" },\n          };\n        }}\n      >\n        {`<Elegaudio src={arrayBuffer.slice(0)} .../>\n//This can't`}\n      </Prism>\n\n      <h2>width</h2>\n      <p>type: number</p>\n      <h2>height</h2>\n      <p>type: number</p>\n      <h2>barWidth</h2>\n      <p>type: number</p>\n      <h2>barGap</h2>\n      <p>type: number</p>\n      <h2>origin</h2>\n      <p>type: \"bottom\" | \"top\" | \"left\" | \"right\"</p>\n      <h2>audioRef</h2>\n      <p>type: React.MutableRefObject{\"<any>\"}</p>\n      <p>\n        This uses the ref of Audio type when inputted. However, if there is no\n        other type of ref or input, it creates its own Audio and returns the\n        corresponding ref.\n      </p>\n      <h2>side</h2>\n      <p>type: \"side\" | \"center\"</p>\n\n      <div\n        onClick={() => {\n          !played ? ref.current.play() : ref.current.pause();\n        }}\n        className=\"playbtn\"\n      >\n        <svg width=\"50\" height=\"50\" viewBox=\"0 0 500 500\" fill=\"#9fc0fc\">\n          {!played ? (\n            <path d=\"M449.644,224.019a30,30,0,0,1,0,51.962l-316.88,182.95a30,30,0,0,1-45-25.98V67.049a30,30,0,0,1,45-25.981Z\" />\n          ) : (\n            <g>\n              <rect x=\"120\" y=\"45\" width=\"70\" height=\"426\" rx=\"20\" ry=\"20\" />\n              <rect x=\"320\" y=\"45\" width=\"70\" height=\"426\" rx=\"20\" ry=\"20\" />\n            </g>\n          )}\n        </svg>\n      </div>\n\n      <Prism language=\"jsx\" style={tomorrow} showLineNumbers={true}>\n        {`<Elegaudio src=\"./sample.mp3\" width={80} height={500} barWidth={3} barGap={1} origin=\"left\"/>`}\n      </Prism>\n      <div className=\"vertical\">\n        <Elegaudio\n          src={inputFile === undefined ? \"./sample.mp3\" : inputFile}\n          width={80}\n          height={500}\n          barWidth={3}\n          barGap={1}\n          origin=\"left\"\n          side=\"side\"\n          audioRef={ref}\n        />\n        <Elegaudio\n          src={inputFile === undefined ? \"./sample.mp3\" : inputFile}\n          width={80}\n          height={500}\n          barWidth={3}\n          barGap={1}\n          origin=\"left\"\n          side=\"center\"\n          audioRef={ref}\n        />\n      </div>\n      <Prism language=\"jsx\" style={tomorrow} showLineNumbers={true}>\n        {`<Elegaudio src=\"./sample.mp3\" width={1000} height={80} barWidth={3} barGap={1} origin=\"bottom\" side=\"side\"/>`}\n      </Prism>\n      <Elegaudio\n        src={inputFile === undefined ? \"./sample.mp3\" : inputFile}\n        width={1000}\n        height={80}\n        barWidth={3}\n        barGap={1}\n        origin=\"bottom\"\n        side=\"side\"\n        audioRef={ref}\n      />\n      <Prism language=\"jsx\" style={tomorrow} showLineNumbers={true}>\n        {`<Elegaudio src=\"./sample.mp3\" width={1000} height={80} barWidth={3} barGap={1} origin=\"bottom\" side=\"center\"/>`}\n      </Prism>\n      <Elegaudio\n        src={inputFile === undefined ? \"./sample.mp3\" : inputFile}\n        width={1000}\n        height={80}\n        barWidth={3}\n        barGap={1}\n        origin=\"bottom\"\n        side=\"center\"\n        audioRef={ref}\n      />\n      <h1>color, playColor, hoverColor</h1>\n      <p>type: string | CanvasGradient | CanvasPattern</p>\n      <Prism language=\"jsx\" style={tomorrow} showLineNumbers={true}>\n        {`<Elegaudio src=\"./sample.mp3\" width={1000} height={80} barWidth={3} barGap={1} color=\"#B4BFBA\" playColor=\"#545957\" hoverColor=\"#98A6A0\"/>`}\n      </Prism>\n      <Elegaudio\n        src={inputFile === undefined ? \"./sample.mp3\" : inputFile}\n        width={1000}\n        height={80}\n        barWidth={3}\n        barGap={1}\n        color=\"#B4BFBA\"\n        playColor=\"#545957\"\n        hoverColor=\"#98A6A0\"\n        audioRef={ref}\n      />\n      <a\n        href=\"/license.html\"\n        target=\"_blank\"\n        style={{ marginTop: \"10rem\", marginLeft: \"auto\" }}\n      >\n        site license\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}